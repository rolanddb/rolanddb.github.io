<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roland de Boo</title>
    <link>https://roland.de-boo.nl/</link>
    <description>Recent content on Roland de Boo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jul 2019 09:19:46 +0200</lastBuildDate>
    
        <atom:link href="https://roland.de-boo.nl/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>Airflow Healthcheck</title>
      <link>https://roland.de-boo.nl/airflow-healthcheck/</link>
      <pubDate>Wed, 03 Jul 2019 09:19:46 +0200</pubDate>
      
      <guid>https://roland.de-boo.nl/airflow-healthcheck/</guid>
      <description>Airflow healthcheck I&amp;rsquo;ve been running Airflow for some years and in my experience, the scheduler sometimes gets stuck. I haven&amp;rsquo;t figured out why this happens, and to my knowledge, no one else has. This doesn&amp;rsquo;t stop me from using Airflow but the issue needs to be addressed or it will bite you at some point, because your pipelines will stall.
I read the article Airflow on AKS this week and it is a good overview of how to deploy Airflow on AKS.</description>
    </item>
    
    
    
    
    
    <item>
      <title>Infrastructure for Deep Learning</title>
      <link>https://roland.de-boo.nl/infrastructure-for-deep-learning/</link>
      <pubDate>Sat, 08 Sep 2018 15:59:23 +0200</pubDate>
      
      <guid>https://roland.de-boo.nl/infrastructure-for-deep-learning/</guid>
      <description>Infrastructure for Deep Learning Last year I freed up some time to follow along with the MOOC &amp;ldquo;Practical Deep Learning for Coders&amp;rdquo; at fast.ai. It&amp;rsquo;s a great introduction if you want to dive right into the material and get your hands dirty. However, I am a little allergic to statements like &amp;ldquo;it only requires 7 lines of code!&amp;rdquo; so the example notebooks are too magical for my taste. I quickly found myself peeling off the layers of abstraction and digging into the utility classes.</description>
    </item>
    
    
    
    <item>
      <title>Airflow on Kubernetes</title>
      <link>https://roland.de-boo.nl/airflow-on-kubernetes/</link>
      <pubDate>Wed, 18 Apr 2018 17:30:58 +0200</pubDate>
      
      <guid>https://roland.de-boo.nl/airflow-on-kubernetes/</guid>
      <description>Guide to Airflow on Kubernetes Recently I spend quite some time diving into Airflow and Kubernetes. While there are reports of people using them together, I could not find any comprehensive guide or tutorial. Also, there are many forks and abandoned scripts and repositories. So you need to do some research.
Here I write down what I&amp;rsquo;ve found, in the hope that it is helpful to others. Because things move quickly, I&amp;rsquo;ve decided to put this on Github rather than in a blog post, so it can be easily updated.</description>
    </item>
    
    
    
    <item>
      <title>Exposing build metadata in your Dropwizard webservice</title>
      <link>https://roland.de-boo.nl/exposing-build-metadata-in-your-dropwizard-webservice/</link>
      <pubDate>Thu, 04 Aug 2016 00:18:23 +0000</pubDate>
      
      <guid>https://roland.de-boo.nl/exposing-build-metadata-in-your-dropwizard-webservice/</guid>
      <description>Exposing metadata from the jar manifest in Web Service In my current job we develop as a continuous delivery process - meaning every build is a artifact that can potentially be deployed to production. Therefore we do not version our software anymore - we stick to the snapshots. The question arises - how do we keep track of what is deployed to production? Deployment happens a lot (i.e. daily), so doing this manually is cumbersome and prone to errors.</description>
    </item>
    
    
  </channel>
</rss>
